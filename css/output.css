/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-amber-200: oklch(92.4% 0.12 95.746);
    --color-amber-400: oklch(82.8% 0.189 84.429);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --breakpoint-xl: 80rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --radius-4xl: 2rem;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }
  .absolute {
    position: absolute;
  }
  .relative {
    position: relative;
  }
  .-top-5 {
    top: calc(var(--spacing) * -5);
  }
  .top-5 {
    top: calc(var(--spacing) * 5);
  }
  .top-8 {
    top: calc(var(--spacing) * 8);
  }
  .top-10 {
    top: calc(var(--spacing) * 10);
  }
  .top-25 {
    top: calc(var(--spacing) * 25);
  }
  .top-27 {
    top: calc(var(--spacing) * 27);
  }
  .top-28 {
    top: calc(var(--spacing) * 28);
  }
  .top-29 {
    top: calc(var(--spacing) * 29);
  }
  .top-30 {
    top: calc(var(--spacing) * 30);
  }
  .top-40 {
    top: calc(var(--spacing) * 40);
  }
  .top-50 {
    top: calc(var(--spacing) * 50);
  }
  .top-\[95\] {
    top: 95;
  }
  .top-\[95px\] {
    top: 95px;
  }
  .top-\[96px\] {
    top: 96px;
  }
  .top-full {
    top: 100%;
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-5 {
    bottom: calc(var(--spacing) * 5);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-30 {
    left: calc(var(--spacing) * 30);
  }
  .z-10 {
    z-index: 10;
  }
  .z-50 {
    z-index: 50;
  }
  .col-span-6 {
    grid-column: span 6 / span 6;
  }
  .mx-1 {
    margin-inline: calc(var(--spacing) * 1);
  }
  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }
  .mx-3 {
    margin-inline: calc(var(--spacing) * 3);
  }
  .mx-4 {
    margin-inline: calc(var(--spacing) * 4);
  }
  .mx-8 {
    margin-inline: calc(var(--spacing) * 8);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }
  .my-3 {
    margin-block: calc(var(--spacing) * 3);
  }
  .my-4 {
    margin-block: calc(var(--spacing) * 4);
  }
  .my-5 {
    margin-block: calc(var(--spacing) * 5);
  }
  .my-6 {
    margin-block: calc(var(--spacing) * 6);
  }
  .my-8 {
    margin-block: calc(var(--spacing) * 8);
  }
  .my-10 {
    margin-block: calc(var(--spacing) * 10);
  }
  .my-15 {
    margin-block: calc(var(--spacing) * 15);
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .ml-6 {
    margin-left: calc(var(--spacing) * 6);
  }
  .line-clamp-1 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .table {
    display: table;
  }
  .h-17 {
    height: calc(var(--spacing) * 17);
  }
  .h-\[1px\] {
    height: 1px;
  }
  .h-\[17px\] {
    height: 17px;
  }
  .h-\[23px\] {
    height: 23px;
  }
  .h-\[59px\] {
    height: 59px;
  }
  .h-\[60\%\] {
    height: 60%;
  }
  .h-\[512px\] {
    height: 512px;
  }
  .h-\[663px\] {
    height: 663px;
  }
  .h-full {
    height: 100%;
  }
  .min-h-\[280px\] {
    min-height: 280px;
  }
  .min-h-\[300px\] {
    min-height: 300px;
  }
  .w-1 {
    width: calc(var(--spacing) * 1);
  }
  .w-1\/3 {
    width: calc(1/3 * 100%);
  }
  .w-1\/6 {
    width: calc(1/6 * 100%);
  }
  .w-3 {
    width: calc(var(--spacing) * 3);
  }
  .w-3\/7 {
    width: calc(3/7 * 100%);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-5\/6 {
    width: calc(5/6 * 100%);
  }
  .w-11 {
    width: calc(var(--spacing) * 11);
  }
  .w-11\/12 {
    width: calc(11/12 * 100%);
  }
  .w-17 {
    width: calc(var(--spacing) * 17);
  }
  .w-48 {
    width: calc(var(--spacing) * 48);
  }
  .w-60 {
    width: calc(var(--spacing) * 60);
  }
  .w-675 {
    width: calc(var(--spacing) * 675);
  }
  .w-\[1px\] {
    width: 1px;
  }
  .w-\[6\%\] {
    width: 6%;
  }
  .w-\[11\/12\] {
    width: 11/12;
  }
  .w-\[12\%\] {
    width: 12%;
  }
  .w-\[14\%\] {
    width: 14%;
  }
  .w-\[16\%\] {
    width: 16%;
  }
  .w-\[16\] {
    width: 16;
  }
  .w-\[17\] {
    width: 17;
  }
  .w-\[17px\] {
    width: 17px;
  }
  .w-\[23px\] {
    width: 23px;
  }
  .w-\[24\%\] {
    width: 24%;
  }
  .w-\[24\] {
    width: 24;
  }
  .w-\[30\%\] {
    width: 30%;
  }
  .w-\[35\%\] {
    width: 35%;
  }
  .w-\[47\%\] {
    width: 47%;
  }
  .w-\[48\%\] {
    width: 48%;
  }
  .w-\[50\%\] {
    width: 50%;
  }
  .w-\[60\%\] {
    width: 60%;
  }
  .w-\[60\] {
    width: 60;
  }
  .w-\[64\%\] {
    width: 64%;
  }
  .w-\[75\%\] {
    width: 75%;
  }
  .w-\[75\] {
    width: 75;
  }
  .w-\[80\%\] {
    width: 80%;
  }
  .w-\[85\%\] {
    width: 85%;
  }
  .w-\[90\%\] {
    width: 90%;
  }
  .w-\[93\%\] {
    width: 93%;
  }
  .w-\[95\%\] {
    width: 95%;
  }
  .w-\[98\%\] {
    width: 98%;
  }
  .w-\[123px\] {
    width: 123px;
  }
  .w-\[190px\] {
    width: 190px;
  }
  .w-\[250px\] {
    width: 250px;
  }
  .w-\[300px\] {
    width: 300px;
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .w-screen {
    width: 100vw;
  }
  .max-w-screen {
    max-width: 100vw;
  }
  .max-w-screen-xl {
    max-width: var(--breakpoint-xl);
  }
  .flex-grow {
    flex-grow: 1;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .origin-center {
    transform-origin: center;
  }
  .origin-left {
    transform-origin: left;
  }
  .-translate-x-20 {
    --tw-translate-x: calc(var(--spacing) * -20);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .scale-x-0 {
    --tw-scale-x: 0%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .columns-3 {
    columns: 3;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-around {
    justify-content: space-around;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .divide-y {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }
  .divide-gray-200 {
    :where(& > :not(:last-child)) {
      border-color: var(--color-gray-200);
    }
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-4xl {
    border-radius: var(--radius-4xl);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-b-1 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-gray-200 {
    border-color: var(--color-gray-200);
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-red-500 {
    border-color: var(--color-red-500);
  }
  .bg-\[\#f3f1ef\] {
    background-color: #f3f1ef;
  }
  .bg-amber-200 {
    background-color: var(--color-amber-200);
  }
  .bg-red-500 {
    background-color: var(--color-red-500);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-\[url\(\'\/src\/img\/dream-houses\.jpg\'\)\] {
    background-image: url('/src/img/dream-houses.jpg');
  }
  .bg-\[url\(\'\/src\/img\/get-inspired-unique-homes\.jpg\'\)\] {
    background-image: url('/src/img/get-inspired-unique-homes.jpg');
  }
  .bg-cover {
    background-size: cover;
  }
  .bg-center {
    background-position: center;
  }
  .bg-no-repeat {
    background-repeat: no-repeat;
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }
  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }
  .px-12 {
    padding-inline: calc(var(--spacing) * 12);
  }
  .px-20 {
    padding-inline: calc(var(--spacing) * 20);
  }
  .px-40 {
    padding-inline: calc(var(--spacing) * 40);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-5 {
    padding-block: calc(var(--spacing) * 5);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-6xl {
    font-size: var(--text-6xl);
    line-height: var(--tw-leading, var(--text-6xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-\[1px\] {
    font-size: 1px;
  }
  .text-\[10px\] {
    font-size: 10px;
  }
  .text-\[11px\] {
    font-size: 11px;
  }
  .text-\[12px\] {
    font-size: 12px;
  }
  .text-\[13px\] {
    font-size: 13px;
  }
  .text-\[14px\] {
    font-size: 14px;
  }
  .text-\[15px\] {
    font-size: 15px;
  }
  .text-\[21px\] {
    font-size: 21px;
  }
  .text-\[22px\] {
    font-size: 22px;
  }
  .text-\[23px\] {
    font-size: 23px;
  }
  .leading-7 {
    --tw-leading: calc(var(--spacing) * 7);
    line-height: calc(var(--spacing) * 7);
  }
  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-\[\#7c7671\] {
    color: #7c7671;
  }
  .text-\[\#928b85\] {
    color: #928b85;
  }
  .text-\[\#86807a\] {
    color: #86807a;
  }
  .text-\[\#A7A7A7\] {
    color: #A7A7A7;
  }
  .text-\[\#B3AFAB\] {
    color: #B3AFAB;
  }
  .text-\[\#\] {
    color: #;
  }
  .text-\[\#a09993\] {
    color: #a09993;
  }
  .text-\[\#b9b1a9\] {
    color: #b9b1a9;
  }
  .text-\[\#f2f0ee\] {
    color: #f2f0ee;
  }
  .text-\[10\] {
    color: 10;
  }
  .text-\[13\] {
    color: 13;
  }
  .text-\[gray-600\] {
    color: gray-600;
  }
  .text-black {
    color: var(--color-black);
  }
  .text-gray-200 {
    color: var(--color-gray-200);
  }
  .text-gray-300 {
    color: var(--color-gray-300);
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-700 {
    color: var(--color-gray-700);
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-red-400 {
    color: var(--color-red-400);
  }
  .text-red-500 {
    color: var(--color-red-500);
  }
  .text-white {
    color: var(--color-white);
  }
  .capitalize {
    text-transform: capitalize;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .underline {
    text-decoration-line: underline;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .duration-700 {
    --tw-duration: 700ms;
    transition-duration: 700ms;
  }
  .duration-1000 {
    --tw-duration: 1000ms;
    transition-duration: 1000ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .\*\:mx-1 {
    :is(& > *) {
      margin-inline: calc(var(--spacing) * 1);
    }
  }
  .\*\:mx-1\.5 {
    :is(& > *) {
      margin-inline: calc(var(--spacing) * 1.5);
    }
  }
  .\*\:mx-2 {
    :is(& > *) {
      margin-inline: calc(var(--spacing) * 2);
    }
  }
  .\*\:mx-4 {
    :is(& > *) {
      margin-inline: calc(var(--spacing) * 4);
    }
  }
  .\*\:mx-5 {
    :is(& > *) {
      margin-inline: calc(var(--spacing) * 5);
    }
  }
  .\*\:mx-auto {
    :is(& > *) {
      margin-inline: auto;
    }
  }
  .\*\:my-1 {
    :is(& > *) {
      margin-block: calc(var(--spacing) * 1);
    }
  }
  .\*\:my-2 {
    :is(& > *) {
      margin-block: calc(var(--spacing) * 2);
    }
  }
  .\*\:my-3 {
    :is(& > *) {
      margin-block: calc(var(--spacing) * 3);
    }
  }
  .\*\:my-4 {
    :is(& > *) {
      margin-block: calc(var(--spacing) * 4);
    }
  }
  .\*\:my-5 {
    :is(& > *) {
      margin-block: calc(var(--spacing) * 5);
    }
  }
  .\*\:mr-2 {
    :is(& > *) {
      margin-right: calc(var(--spacing) * 2);
    }
  }
  .\*\:mr-3 {
    :is(& > *) {
      margin-right: calc(var(--spacing) * 3);
    }
  }
  .\*\:mr-5 {
    :is(& > *) {
      margin-right: calc(var(--spacing) * 5);
    }
  }
  .\*\:mr-7 {
    :is(& > *) {
      margin-right: calc(var(--spacing) * 7);
    }
  }
  .\*\:mb-2 {
    :is(& > *) {
      margin-bottom: calc(var(--spacing) * 2);
    }
  }
  .\*\:mb-3 {
    :is(& > *) {
      margin-bottom: calc(var(--spacing) * 3);
    }
  }
  .\*\:h-\[314px\] {
    :is(& > *) {
      height: 314px;
    }
  }
  .\*\:w-full {
    :is(& > *) {
      width: 100%;
    }
  }
  .\*\:cursor-pointer {
    :is(& > *) {
      cursor: pointer;
    }
  }
  .\*\:items-end {
    :is(& > *) {
      align-items: flex-end;
    }
  }
  .\*\:rounded-lg {
    :is(& > *) {
      border-radius: var(--radius-lg);
    }
  }
  .\*\:border {
    :is(& > *) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .\*\:border-gray-200 {
    :is(& > *) {
      border-color: var(--color-gray-200);
    }
  }
  .\*\:bg-white {
    :is(& > *) {
      background-color: var(--color-white);
    }
  }
  .\*\:px-1 {
    :is(& > *) {
      padding-inline: calc(var(--spacing) * 1);
    }
  }
  .\*\:px-2 {
    :is(& > *) {
      padding-inline: calc(var(--spacing) * 2);
    }
  }
  .\*\:px-3 {
    :is(& > *) {
      padding-inline: calc(var(--spacing) * 3);
    }
  }
  .\*\:py-1 {
    :is(& > *) {
      padding-block: calc(var(--spacing) * 1);
    }
  }
  .\*\:py-2 {
    :is(& > *) {
      padding-block: calc(var(--spacing) * 2);
    }
  }
  .\*\:py-3 {
    :is(& > *) {
      padding-block: calc(var(--spacing) * 3);
    }
  }
  .\*\:py-4 {
    :is(& > *) {
      padding-block: calc(var(--spacing) * 4);
    }
  }
  .\*\:py-6 {
    :is(& > *) {
      padding-block: calc(var(--spacing) * 6);
    }
  }
  .\*\:text-center {
    :is(& > *) {
      text-align: center;
    }
  }
  .\*\:font-normal {
    :is(& > *) {
      --tw-font-weight: var(--font-weight-normal);
      font-weight: var(--font-weight-normal);
    }
  }
  .\*\:font-semibold {
    :is(& > *) {
      --tw-font-weight: var(--font-weight-semibold);
      font-weight: var(--font-weight-semibold);
    }
  }
  .\*\:transition {
    :is(& > *) {
      transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .\*\:duration-500 {
    :is(& > *) {
      --tw-duration: 500ms;
      transition-duration: 500ms;
    }
  }
  .group-hover\:pointer-events-auto {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        pointer-events: auto;
      }
    }
  }
  .group-hover\:scale-x-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 100%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .group-hover\:text-white {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .group-hover\:opacity-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .group-hover\/buy\:pointer-events-auto {
    &:is(:where(.group\/buy):hover *) {
      @media (hover: hover) {
        pointer-events: auto;
      }
    }
  }
  .group-hover\/buy\:flex {
    &:is(:where(.group\/buy):hover *) {
      @media (hover: hover) {
        display: flex;
      }
    }
  }
  .group-hover\/buy\:opacity-100 {
    &:is(:where(.group\/buy):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .group-hover\/buy\:\*\:font-normal {
    &:is(:where(.group\/buy):hover *) {
      @media (hover: hover) {
        :is(& > *) {
          --tw-font-weight: var(--font-weight-normal);
          font-weight: var(--font-weight-normal);
        }
      }
    }
  }
  .group-hover\/image\:translate-y-1 {
    &:is(:where(.group\/image):hover *) {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * 1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\/image\:scale-103 {
    &:is(:where(.group\/image):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 103%;
        --tw-scale-y: 103%;
        --tw-scale-z: 103%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .group-hover\/info\:flex {
    &:is(:where(.group\/info):hover *) {
      @media (hover: hover) {
        display: flex;
      }
    }
  }
  .group-hover\/select\:translate-x-1 {
    &:is(:where(.group\/select):hover *) {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\/select\:opacity-100 {
    &:is(:where(.group\/select):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .group-hover\/term\:scale-x-100 {
    &:is(:where(.group\/term):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 100%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:-translate-y-2 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * -2);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:scale-105 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:border-red-500 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-red-500);
      }
    }
  }
  .hover\:bg-amber-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-amber-200);
      }
    }
  }
  .hover\:bg-gray-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-100);
      }
    }
  }
  .hover\:bg-gray-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-200);
      }
    }
  }
  .hover\:bg-red-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-600);
      }
    }
  }
  .hover\:fill-white {
    &:hover {
      @media (hover: hover) {
        fill: var(--color-white);
      }
    }
  }
  .hover\:text-red-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-500);
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .hover\:decoration-red-500 {
    &:hover {
      @media (hover: hover) {
        text-decoration-color: var(--color-red-500);
      }
    }
  }
  .hover\:\[text-decoration-style\:wa\] {
    &:hover {
      @media (hover: hover) {
        text-decoration-style: wa;
      }
    }
  }
  .hover\:\[text-decoration-style\:wavy\] {
    &:hover {
      @media (hover: hover) {
        text-decoration-style: wavy;
      }
    }
  }
  .hover\:decoration-1 {
    &:hover {
      @media (hover: hover) {
        text-decoration-thickness: 1px;
      }
    }
  }
  .\*\:hover\:mx-1 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          margin-inline: calc(var(--spacing) * 1);
        }
      }
    }
  }
  .\*\:hover\:-translate-y-1 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          --tw-translate-y: calc(var(--spacing) * -1);
          translate: var(--tw-translate-x) var(--tw-translate-y);
        }
      }
    }
  }
  .\*\:hover\:border-red-500 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-red-500);
        }
      }
    }
  }
  .\*\:hover\:bg-red-500 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-red-500);
        }
      }
    }
  }
  .\*\:hover\:bg-white {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-white);
        }
      }
    }
  }
  .\*\:hover\:px-1 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          padding-inline: calc(var(--spacing) * 1);
        }
      }
    }
  }
  .\*\:hover\:text-red-500 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-red-500);
        }
      }
    }
  }
  .\*\:hover\:text-white {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-white);
        }
      }
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .sm\:flex {
    @media (width >= 40rem) {
      display: flex;
    }
  }
  .sm\:hidden {
    @media (width >= 40rem) {
      display: none;
    }
  }
  .sm\:h-\[1px\] {
    @media (width >= 40rem) {
      height: 1px;
    }
  }
  .sm\:w-11\/12 {
    @media (width >= 40rem) {
      width: calc(11/12 * 100%);
    }
  }
  .sm\:w-\[30\%\] {
    @media (width >= 40rem) {
      width: 30%;
    }
  }
  .sm\:w-\[30\] {
    @media (width >= 40rem) {
      width: 30;
    }
  }
  .sm\:w-\[35\%\] {
    @media (width >= 40rem) {
      width: 35%;
    }
  }
  .sm\:w-\[40\%\] {
    @media (width >= 40rem) {
      width: 40%;
    }
  }
  .sm\:w-\[48\%\] {
    @media (width >= 40rem) {
      width: 48%;
    }
  }
  .sm\:w-\[60\%\] {
    @media (width >= 40rem) {
      width: 60%;
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:flex-row-reverse {
    @media (width >= 40rem) {
      flex-direction: row-reverse;
    }
  }
  .sm\:items-start {
    @media (width >= 40rem) {
      align-items: flex-start;
    }
  }
  .sm\:justify-end {
    @media (width >= 40rem) {
      justify-content: flex-end;
    }
  }
  .sm\:text-left {
    @media (width >= 40rem) {
      text-align: left;
    }
  }
  .sm\:\*\:h-\[413px\] {
    @media (width >= 40rem) {
      :is(& > *) {
        height: 413px;
      }
    }
  }
  .sm\:group-hover\:scale-x-100 {
    @media (width >= 40rem) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          --tw-scale-x: 100%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .md\:flex {
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .md\:hidden {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .md\:h-\[556px\] {
    @media (width >= 48rem) {
      height: 556px;
    }
  }
  .md\:w-1\/4 {
    @media (width >= 48rem) {
      width: calc(1/4 * 100%);
    }
  }
  .md\:w-2\/3 {
    @media (width >= 48rem) {
      width: calc(2/3 * 100%);
    }
  }
  .md\:w-\[36\%\] {
    @media (width >= 48rem) {
      width: 36%;
    }
  }
  .md\:w-\[60\%\] {
    @media (width >= 48rem) {
      width: 60%;
    }
  }
  .md\:flex-col {
    @media (width >= 48rem) {
      flex-direction: column;
    }
  }
  .md\:text-6xl {
    @media (width >= 48rem) {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  .lg\:w-1\/2 {
    @media (width >= 64rem) {
      width: calc(1/2 * 100%);
    }
  }
  .lg\:w-\[24\%\] {
    @media (width >= 64rem) {
      width: 24%;
    }
  }
  .lg\:w-\[60\%\] {
    @media (width >= 64rem) {
      width: 60%;
    }
  }
  .lg\:flex-row {
    @media (width >= 64rem) {
      flex-direction: row;
    }
  }
  .lg\:justify-around {
    @media (width >= 64rem) {
      justify-content: space-around;
    }
  }
  .xl\:w-1\/3 {
    @media (width >= 80rem) {
      width: calc(1/3 * 100%);
    }
  }
  .xl\:w-1\/4 {
    @media (width >= 80rem) {
      width: calc(1/4 * 100%);
    }
  }
  .xl\:w-1\/6 {
    @media (width >= 80rem) {
      width: calc(1/6 * 100%);
    }
  }
  .xl\:w-\[19\%\] {
    @media (width >= 80rem) {
      width: 19%;
    }
  }
  .xl\:w-\[24\%\] {
    @media (width >= 80rem) {
      width: 24%;
    }
  }
  .xl\:w-\[28\%\] {
    @media (width >= 80rem) {
      width: 28%;
    }
  }
  .xl\:w-\[38\%\] {
    @media (width >= 80rem) {
      width: 38%;
    }
  }
  .xl\:w-\[65\%\] {
    @media (width >= 80rem) {
      width: 65%;
    }
  }
  .xl\:w-\[75\%\] {
    @media (width >= 80rem) {
      width: 75%;
    }
  }
  .dark\:rounded-md {
    @media (prefers-color-scheme: dark) {
      border-radius: var(--radius-md);
    }
  }
  .dark\:bg-white {
    @media (prefers-color-scheme: dark) {
      background-color: var(--color-white);
    }
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: rotateX(0);
      --tw-rotate-y: rotateY(0);
      --tw-rotate-z: rotateZ(0);
      --tw-skew-x: skewX(0);
      --tw-skew-y: skewY(0);
      --tw-divide-y-reverse: 0;
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-duration: initial;
      --tw-ease: initial;
    }
  }
}
